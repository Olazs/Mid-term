/*
 * 1. Feladat: Írjon programot, amely beolvas 3 sztringet, majd írja ki fordított sorrendben őket!
 */
#include <stdio.h>
#include <string.h>

int main() {
    char str1[100], str2[100], str3[100];
    
    printf("Kérem adja meg az első sztringet: ");
    scanf("%s", str1);
    
    printf("Kérem adja meg a második sztringet: ");
    scanf("%s", str2);
    
    printf("Kérem adja meg a harmadik sztringet: ");
    scanf("%s", str3);
    
    printf("Fordított sorrendben:\n%s\n%s\n%s\n", str3, str2, str1);
    
    return 0;
}

/*
 * 2. Feladat: Írjon programot, amely beolvas 5 sztringet, majd összefűzi őket egy sztringgé!
 */
#include <stdio.h>
#include <string.h>

int main() {
    char str1[50], str2[50], str3[50], str4[50], str5[50];
    char result[250] = "";
    
    printf("Kérem adja meg az első sztringet: ");
    scanf("%s", str1);
    
    printf("Kérem adja meg a második sztringet: ");
    scanf("%s", str2);
    
    printf("Kérem adja meg a harmadik sztringet: ");
    scanf("%s", str3);
    
    printf("Kérem adja meg a negyedik sztringet: ");
    scanf("%s", str4);
    
    printf("Kérem adja meg az ötödik sztringet: ");
    scanf("%s", str5);
    
    // Összefűzés
    strcat(result, str1);
    strcat(result, str2);
    strcat(result, str3);
    strcat(result, str4);
    strcat(result, str5);
    
    printf("Az összefűzött sztring: %s\n", result);
    
    return 0;
}

/*
 * 3. Feladat: Írjon programot, amely sztringeket kér felhasználótól, amíg egy 10 hosszúságút nem kap meg.
 * Írja ki, hányadik alkalommal teljesült a feltétel!
 */
#include <stdio.h>
#include <string.h>

int main() {
    char str[100];
    int count = 0;
    
    do {
        count++;
        printf("Kérem adjon meg egy sztringet: ");
        scanf("%s", str);
    } while (strlen(str) != 10);
    
    printf("A(z) %d. alkalommal kapott 10 karakter hosszúságú sztringet.\n", count);
    
    return 0;
}

/*
 * 4. Feladat: Írjon programot, amely bekér egy sztringet, majd összekeveri a karaktereket!
 */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

void shuffle(char *str) {
    int length = strlen(str);
    int i, j;
    char temp;
    
    srand(time(NULL));
    
    for (i = length - 1; i > 0; i--) {
        j = rand() % (i + 1);
        temp = str[i];
        str[i] = str[j];
        str[j] = temp;
    }
}

int main() {
    char str[100];
    
    printf("Kérem adjon meg egy sztringet: ");
    scanf("%s", str);
    
    printf("Eredeti sztring: %s\n", str);
    shuffle(str);
    printf("Összekevert sztring: %s\n", str);
    
    return 0;
}

/*
 * 5. Feladat: Generáljon 10db 10 karakter hosszúságú véletlen-sztringet!
 */
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void generateRandomString(char *str, int length) {
    const char charset[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    int i;
    
    for (i = 0; i < length; i++) {
        int key = rand() % (sizeof(charset) - 1);
        str[i] = charset[key];
    }
    
    str[length] = '\0';
}

int main() {
    char randomStr[11]; // 10 karakter + '\0'
    int i;
    
    srand(time(NULL));
    
    for (i = 0; i < 10; i++) {
        generateRandomString(randomStr, 10);
        printf("%d. véletlen sztring: %s\n", i+1, randomStr);
    }
    
    return 0;
}

/*
 * 6. Feladat: Írjon programot, amely egy mutató segítségével ír ki egy beolvasott sztringet, karakterenként!
 */
#include <stdio.h>

int main() {
    char str[100];
    char *ptr;
    
    printf("Kérem adjon meg egy sztringet: ");
    scanf("%s", str);
    
    ptr = str;
    
    printf("A sztring karakterenként mutatóval kiírva:\n");
    while (*ptr != '\0') {
        printf("%c\n", *ptr);
        ptr++;
    }
    
    return 0;
}

/*
 * 7. Feladat: Írjon programot, amely összefűz két sztringet karakterenként!
 */
#include <stdio.h>
#include <string.h>

int main() {
    char str1[50], str2[50], result[100];
    int i, j, len1, len2;
    
    printf("Kérem adja meg az első sztringet: ");
    scanf("%s", str1);
    
    printf("Kérem adja meg a második sztringet: ");
    scanf("%s", str2);
    
    len1 = strlen(str1);
    len2 = strlen(str2);
    
    // Karakterenként összefűzés
    for (i = 0, j = 0; i < len1 || i < len2; i++) {
        if (i < len1) {
            result[j++] = str1[i];
        }
        if (i < len2) {
            result[j++] = str2[i];
        }
    }
    
    result[j] = '\0';
    
    printf("A karakterenként összefűzött sztring: %s\n", result);
    
    return 0;
}

/*
 * 8. Feladat: Írjon programot, amely két bekért sztring közül eldönti, melyik van hamarabb az ABC-ben!
 */
#include <stdio.h>
#include <string.h>

int main() {
    char str1[100], str2[100];
    int result;
    
    printf("Kérem adja meg az első sztringet: ");
    scanf("%s", str1);
    
    printf("Kérem adja meg a második sztringet: ");
    scanf("%s", str2);
    
    result = strcmp(str1, str2);
    
    if (result < 0) {
        printf("Az \"%s\" van hamarabb az ABC-ben.\n", str1);
    } else if (result > 0) {
        printf("Az \"%s\" van hamarabb az ABC-ben.\n", str2);
    } else {
        printf("A két sztring megegyezik.\n");
    }
    
    return 0;
}

/*
 * 9. Feladat: Írjon programot, amely megfordít egy bekért sztringet!
 */
#include <stdio.h>
#include <string.h>

void reverseString(char *str) {
    int length = strlen(str);
    int i, j;
    char temp;
    
    for (i = 0, j = length - 1; i < j; i++, j--) {
        temp = str[i];
        str[i] = str[j];
        str[j] = temp;
    }
}

int main() {
    char str[100];
    
    printf("Kérem adjon meg egy sztringet: ");
    scanf("%s", str);
    
    printf("Eredeti sztring: %s\n", str);
    reverseString(str);
    printf("Megfordított sztring: %s\n", str);
    
    return 0;
}